/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.app.view;

import br.app.abstracts.BebidasPrototype;
import br.app.gerence.GerenciarBebidas;
import java.net.URL;
import java.util.Arrays;
import javax.swing.JOptionPane;

/**
 *
 * @author mvictor
 */
public class Lanchonete extends javax.swing.JFrame {

    /**
     * Creates new form Lanchonete
     */
    public Lanchonete() {
        initComponents();
        URL url = getClass().getResource("/icones/cafe.png");
        if(url!=null){
            btncappucino.setIcon(new javax.swing.ImageIcon(url));
        }else{
            System.err.println("Image não encontrado");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btncappucino = new javax.swing.JButton();
        btncafe = new javax.swing.JButton();
        btncha = new javax.swing.JButton();
        btnchocolate = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btncappucino.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/app/icones/cappucino.png"))); // NOI18N
        btncappucino.setBorderPainted(false);
        btncappucino.setContentAreaFilled(false);
        btncappucino.setFocusPainted(false);
        btncappucino.setFocusable(false);
        btncappucino.setRequestFocusEnabled(false);
        btncappucino.setRolloverEnabled(false);
        btncappucino.setVerifyInputWhenFocusTarget(false);
        btncappucino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncappucinoActionPerformed(evt);
            }
        });

        btncafe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/app/icones/cafe.png"))); // NOI18N
        btncafe.setBorderPainted(false);
        btncafe.setContentAreaFilled(false);
        btncafe.setFocusPainted(false);
        btncafe.setFocusable(false);
        btncafe.setRequestFocusEnabled(false);
        btncafe.setRolloverEnabled(false);
        btncafe.setVerifyInputWhenFocusTarget(false);
        btncafe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncafeActionPerformed(evt);
            }
        });

        btncha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/app/icones/cha.png"))); // NOI18N
        btncha.setBorderPainted(false);
        btncha.setContentAreaFilled(false);
        btncha.setFocusPainted(false);
        btncha.setFocusable(false);
        btncha.setRequestFocusEnabled(false);
        btncha.setRolloverEnabled(false);
        btncha.setVerifyInputWhenFocusTarget(false);
        btncha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnchaActionPerformed(evt);
            }
        });

        btnchocolate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/app/icones/chocolate.png"))); // NOI18N
        btnchocolate.setBorderPainted(false);
        btnchocolate.setContentAreaFilled(false);
        btnchocolate.setFocusPainted(false);
        btnchocolate.setFocusable(false);
        btnchocolate.setRequestFocusEnabled(false);
        btnchocolate.setRolloverEnabled(false);
        btnchocolate.setVerifyInputWhenFocusTarget(false);
        btnchocolate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnchocolateActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel1.setText("Clique no Icone para realizar a compra.");

        jLabel2.setText("Chocolate do Vitão - Atendimento 24 horas");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(jLabel1))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(jLabel2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btncappucino, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(btnchocolate, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 220, Short.MAX_VALUE)
                        .addComponent(btncha, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(31, 31, 31))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(44, 44, 44)
                    .addComponent(btncafe, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(302, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(btncappucino, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnchocolate, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btncha, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(42, 42, 42)
                    .addComponent(btncafe, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(209, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btncafeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncafeActionPerformed
        // TODO add your handling code here:
        Info info = null;
        
        Object[] itens = {"Café normal", "Café com leite", "Café Gelado", "Milf Coffe"};
        Object selectedValue = JOptionPane.showInputDialog(rootPane, 
                "Você gostaria de qual tipo de café?",
                "Opção", 
                JOptionPane.INFORMATION_MESSAGE, 
                null,
                itens, 
                itens[0]);
        
        if(selectedValue.equals(itens[0])){
            BebidasPrototype cafe = GerenciarBebidas.getPrototipo("cafe");
                cafe.setNome("Café Quente");
                cafe.setItems(Arrays.asList(
                    "Café em Pó",
                    "Açucar",
                    "Água quente"
                ));
                cafe.setPreco(1.50);
                info = new Info(
                    cafe.getNome(), 
                    cafe.getItems(),
                    cafe.getPreco()
                );
                info.setVisible(true);
                this.dispose();
        }
        else if(selectedValue.equals(itens[1])){
            BebidasPrototype cafe = GerenciarBebidas.getPrototipo("cafe");
                cafe.setNome("Café c/ Leite");
                cafe.setItems(Arrays.asList(
                    "Café em Pó",
                    "Açucar",
                    "Leite Quente"
                ));
                cafe.setPreco(2.50);
                info = new Info(
                    cafe.getNome(), 
                    cafe.getItems(),
                    cafe.getPreco()
                );
                info.setVisible(true);
                this.dispose();
        }
        else if(selectedValue.equals(itens[2])){
            BebidasPrototype cafe = GerenciarBebidas.getPrototipo("cafe");
                cafe.setNome("Café Gelado");
                cafe.setItems(Arrays.asList(
                    "Essencia de Cafeína",
                    "Água com Gás",
                    "Cubos de Gelo",
                    "Energético",
                    "Guarana em Pó",
                    "Rodelas de Limão"
                ));
                cafe.setPreco(3.50);
                info = new Info(
                    cafe.getNome(), 
                    cafe.getItems(),
                    cafe.getPreco()
                );
                info.setVisible(true);
                this.dispose();
        }
        else if(selectedValue.equals(itens[3])){
            BebidasPrototype cafe = GerenciarBebidas.getPrototipo("cafe");
                cafe.setNome("Solvete de Café");
                cafe.setItems(Arrays.asList(
                    "Essencial de Café",
                    "Solvete batido",
                    "Leite condesado",
                    "Granulado de Chocolate",
                    "Creme de Leite",
                    "Bastones de chocolate",
                    "Rodelas de Limão",
                    "Cobertura de Limão",
                    "Pó de leite"
                ));
                cafe.setPreco(4.00);
                info = new Info(
                    cafe.getNome(), 
                    cafe.getItems(),
                    cafe.getPreco()
                );
                info.setVisible(true);
                this.dispose();
        }
        
        
    }//GEN-LAST:event_btncafeActionPerformed

    private void btnchocolateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnchocolateActionPerformed
        // TODO add your handling code here:
        Info info = null;
        
        
        Object[] itens = {
            "Chocalate", 
            "Chocolate Expresso", 
            "Gelado de Chocolate",
            "Milf de Chocolate"
        };
        
        Object selectedValue = JOptionPane.showInputDialog(rootPane, 
                "Você gostaria de qual tipo de chocolate?",
                "Opção", 
                JOptionPane.INFORMATION_MESSAGE, 
                null,
                itens, 
                itens[0]);
        
        if(selectedValue.equals(itens[0])){
            BebidasPrototype cafe = GerenciarBebidas.getPrototipo("chocolate");
                cafe.setNome("Chocolate Quente");
                cafe.setItems(Arrays.asList(
                    "Chocolate em Pó",
                    "Açucar",
                    "Leite"
                ));
                cafe.setPreco(2.50);
                info = new Info(
                    cafe.getNome(), 
                    cafe.getItems(),
                    cafe.getPreco()
                );
                info.setVisible(true);
                this.dispose();
        }
        else if(selectedValue.equals(itens[1])){
            BebidasPrototype cafe = GerenciarBebidas.getPrototipo("chocolate");
                cafe.setNome("Chocolate expresso");
                cafe.setItems(Arrays.asList(
                    "Achocolatado em Pó",
                    "Açucar",
                    "Leite Quente",
                    "Leite Condesado",
                    "Creme de Leite"
                ));
                cafe.setPreco(8.30);
                info = new Info(
                    cafe.getNome(), 
                    cafe.getItems(),
                    cafe.getPreco()
                );
                info.setVisible(true);
                this.dispose();
        }
        else if(selectedValue.equals(itens[2])){
            BebidasPrototype cafe = GerenciarBebidas.getPrototipo("chocolate");
                cafe.setNome("Gelado de Chocolate");
                cafe.setItems(Arrays.asList(
                    "Essencia de Achocolatado",
                    "Água com Gás",
                    "Cubos de Gelo",
                    "Energético",
                    "Guarana em Pó",
                    "Rodelas de Limão",
                    "Creme de Leite",
                    "Essencial de Bauninha",
                    "Espumante"
                ));
                cafe.setPreco(12.50);
                info = new Info(
                    cafe.getNome(), 
                    cafe.getItems(),
                    cafe.getPreco()
                );
                info.setVisible(true);
                this.dispose();
        }
        else if(selectedValue.equals(itens[3])){
            BebidasPrototype cafe = GerenciarBebidas.getPrototipo("chocolate");
                cafe.setNome("Solvete de Chocolate");
                cafe.setItems(Arrays.asList(
                    "Essencial de Chocolate",
                    "Solvete batido",
                    "Leite condesado",
                    "Granulado de Chocolate",
                    "Creme de Leite",
                    "Bastones de chocolate",
                    "Rodelas de Limão",
                    "Cobertura de Limão",
                    "Pó de leite",
                    "Açai"
                ));
                cafe.setPreco(4.00);
                info = new Info(
                    cafe.getNome(), 
                    cafe.getItems(),
                    cafe.getPreco()
                );
                info.setVisible(true);
                this.dispose();
        }
    }//GEN-LAST:event_btnchocolateActionPerformed

    private void btncappucinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncappucinoActionPerformed
        // TODO add your handling code here:
        Info info = null;
        
        
        Object[] itens = {
            "Cappucino Tradicional", 
            "Cappucino Expresso", 
            "Cappucino de Morango",
            "Cappucino La Lima"
        };
        
        Object selectedValue = JOptionPane.showInputDialog(rootPane, 
                "Você gostaria de qual tipo de cappucino?",
                "Opção", 
                JOptionPane.INFORMATION_MESSAGE, 
                null,
                itens, 
                itens[0]);
        
        if(selectedValue.equals(itens[0])){
            BebidasPrototype cafe = GerenciarBebidas.getPrototipo("cappucino");
                cafe.setNome("Cappucino Tradicional");
                cafe.setItems(Arrays.asList(
                    "Chocolate em Pó",
                    "Creme de Leite",
                    "Leite condesado",
                    "Espumante de Leite",
                    "Açucar",
                    "Leite quente"
                ));
                cafe.setPreco(2.50);
                info = new Info(
                    cafe.getNome(), 
                    cafe.getItems(),
                    cafe.getPreco()
                );
                info.setVisible(true);
                this.dispose();
        }
        else if(selectedValue.equals(itens[1])){
            BebidasPrototype cafe = GerenciarBebidas.getPrototipo("cappucino");
                cafe.setNome("Cappucino Expresso");
                cafe.setItems(Arrays.asList(
                    "Achocolatado em Pó",
                    "Açucar",
                    "Café descafeinado",
                    "Leite Quente",
                    "Leite Condesado",
                    "Granulados",
                    "Creme de Leite"
                ));
                cafe.setPreco(8.30);
                info = new Info(
                    cafe.getNome(), 
                    cafe.getItems(),
                    cafe.getPreco()
                );
                info.setVisible(true);
                this.dispose();
        }
        else if(selectedValue.equals(itens[2])){
            BebidasPrototype cafe = GerenciarBebidas.getPrototipo("cappucino");
                cafe.setNome("Cappucino de Morango");
                cafe.setItems(Arrays.asList(
                    "Achocolatado em Pó",
                    "Açucar",
                    "Café descafeinado",
                    "Leite Quente",
                    "Leite Condesado",
                    "Granulados",
                    "Creme de Leite",
                    "Essencial de Morango"
                ));
                cafe.setPreco(12.50);
                info = new Info(
                    cafe.getNome(), 
                    cafe.getItems(),
                    cafe.getPreco()
                );
                info.setVisible(true);
                this.dispose();
        }
        else if(selectedValue.equals(itens[3])){
            BebidasPrototype cafe = GerenciarBebidas.getPrototipo("cappucino");
                cafe.setNome("Cappucino La Lima");
                cafe.setItems(Arrays.asList(
                    "Achocolatado em Pó",
                    "Açucar",
                    "Café descafeinado",
                    "Leite Quente",
                    "Leite Condesado",
                    "Granulados",
                    "Creme de Leite",
                    "Essencia de limão"
                ));
                cafe.setPreco(16.48);
                info = new Info(
                    cafe.getNome(), 
                    cafe.getItems(),
                    cafe.getPreco()
                );
                info.setVisible(true);
                this.dispose();
        }
    }//GEN-LAST:event_btncappucinoActionPerformed

    private void btnchaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnchaActionPerformed
        // TODO add your handling code here:
        Info info = null;
        
        
        Object[] itens = {
            "Chá de Limão", 
            "Chá Verde", 
            "Cha de Erva Doce",
            "Chá de Hortelã",
            "Chá de Capim Santo + Limão",
            "Chá Preto",
            "Chá de Limão + Erva Cidreira +  Canela"
        };
        
        Object selectedValue = JOptionPane.showInputDialog(rootPane, 
                "Você gostaria de qual tipo de chá?",
                "Opção", 
                JOptionPane.INFORMATION_MESSAGE, 
                null,
                itens, 
                itens[0]);
        
        if(selectedValue.equals(itens[0])){
            BebidasPrototype cha = GerenciarBebidas.getPrototipo("cha");
                cha.setNome("Chá de Limão");
                cha.setItems(Arrays.asList(
                    "Água Quente",
                    "Açuca Mascavo",
                    "Essencia de Limão"
                ));
                cha.setPreco(2.50);
                info = new Info(
                    cha.getNome(), 
                    cha.getItems(),
                    cha.getPreco()
                );
                info.setVisible(true);
                this.dispose();
        }
        else if(selectedValue.equals(itens[1])){
            BebidasPrototype cha = GerenciarBebidas.getPrototipo("cha");
                cha.setNome("Chá Verde");
                cha.setItems(Arrays.asList(
                    "Água Quente",
                    "Açuca Mascavo",
                    "Essencia de chá verde"
                ));
                cha.setPreco(2.50);
                info = new Info(
                    cha.getNome(), 
                    cha.getItems(),
                    cha.getPreco()
                );
                info.setVisible(true);
                this.dispose();
        }
        else if(selectedValue.equals(itens[2])){
            BebidasPrototype cha = GerenciarBebidas.getPrototipo("cha");
                cha.setNome("Cha de Erva Doce");
                cha.setItems(Arrays.asList(
                    "Água Quente",
                    "Açuca Mascavo",
                    "Essencia de erva doce"
                ));
                cha.setPreco(2.50);
                info = new Info(
                    cha.getNome(), 
                    cha.getItems(),
                    cha.getPreco()
                );
                info.setVisible(true);
                this.dispose();
        }
        else if(selectedValue.equals(itens[3])){
            BebidasPrototype cha = GerenciarBebidas.getPrototipo("cha");
                cha.setNome("Chá de Hortelã");
                cha.setItems(Arrays.asList(
                    "Água Quente",
                    "Açuca Mascavo",
                    "Essencia de hortelã"
                ));
                cha.setPreco(2.50);
                info = new Info(
                    cha.getNome(), 
                    cha.getItems(),
                    cha.getPreco()
                );
                info.setVisible(true);
                this.dispose();
        }
        else if(selectedValue.equals(itens[4])){
            BebidasPrototype cha = GerenciarBebidas.getPrototipo("cha");
                cha.setNome("Chá de Capim Santo + Limão");
                cha.setItems(Arrays.asList(
                    "Água Quente",
                    "Açuca Mascavo",
                    "Essencia de capim santo",
                    "Essencial de Limão"
                ));
                cha.setPreco(2.50);
                info = new Info(
                    cha.getNome(), 
                    cha.getItems(),
                    cha.getPreco()
                );
                info.setVisible(true);
                this.dispose();
        }
        else if(selectedValue.equals(itens[5])){
            BebidasPrototype cha = GerenciarBebidas.getPrototipo("cha");
                cha.setNome("Chá Preto");
                cha.setItems(Arrays.asList(
                    "Água Quente",
                    "Açuca Mascavo",
                    "Essencia de chá preto"
                ));
                cha.setPreco(2.50);
                info = new Info(
                    cha.getNome(), 
                    cha.getItems(),
                    cha.getPreco()
                );
                info.setVisible(true);
                this.dispose();
        }
        else if(selectedValue.equals(itens[6])){
            BebidasPrototype cha = GerenciarBebidas.getPrototipo("cha");
                cha.setNome("Chá de Limão + Erva Cidreira +  Canela");
                cha.setItems(Arrays.asList(
                    "Água Quente",
                    "Açuca Mascavo",
                    "Essencia de Erva Cidreira",
                    "Essencial de Limão",
                    "Essencial de Canela + Cravo"
                ));
                cha.setPreco(2.50);
                info = new Info(
                    cha.getNome(), 
                    cha.getItems(),
                    cha.getPreco()
                );
                info.setVisible(true);
                this.dispose();
        }
    }//GEN-LAST:event_btnchaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Lanchonete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Lanchonete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Lanchonete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Lanchonete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Lanchonete().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btncafe;
    private javax.swing.JButton btncappucino;
    private javax.swing.JButton btncha;
    private javax.swing.JButton btnchocolate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables
}
